# Simplified Nginx configuration for Flask Distance Lookup Service
# Domain: distance.lookupferrara.it
# Backend: Flask app running on localhost:5001

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

# HTTP server (redirects to HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name distance.lookupferrara.it;
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name distance.lookupferrara.it;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/distance.lookupferrara.it/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/distance.lookupferrara.it/privkey.pem;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS Headers
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;

    # Logging
    access_log /var/log/nginx/distance.lookupferrara.it.access.log;
    error_log /var/log/nginx/distance.lookupferrara.it.error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Handle OPTIONS requests (CORS preflight)
    location / {
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Proxy to Flask backend
        proxy_pass http://127.0.0.1:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:5001/distance?origin=test&destination=test;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }

    # Block common attacks
    location ~* /(\.git|\.env|wp-admin|admin) {
        deny all;
        return 404;
    }

    # Robots.txt
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
    }

    # Favicon
    location = /favicon.ico {
        return 204;
        access_log off;
    }
}
